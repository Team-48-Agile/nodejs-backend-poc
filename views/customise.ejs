<!DOCTYPE html>

<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">    
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" type="text/css" href="/bootstrap/css/bootstrap.min.css">
    <!-- CUSTOM STYLES -->
    <link rel="stylesheet" type="text/css" href="/style.css">

    <!-- GOOGLE FONTS -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&family=Roboto:wght@400;700&display=swap" rel="stylesheet">


    <title>Bionic Reading POC</title>

    <script src = "/scripts.js"></script>
</head>

<body>

    <%- include('partials/header.html'); %>
    
    <main role="main" class="container">

        <a class="edit-link" href="/">&laquo; Edit Text</a>

        <div class="row">
        <!-- <div class = "grid-container-customise"> -->
            <div class="col-lg-8">
                <div id="textArea">
                    <!-- Note the use of '%-' instead of '%=' here.
                    https://stackoverflow.com/questions/39335143/display-variable-content-with-html-tags-in-ejs
                    -->
                    <p id="bionicText"><%- textWithBionic %></p>
                </div>
            </div>

            <div id="customisationArea" class="col-lg-4">

                <div id="btnArea">
                    <!--<div class="btn">
                        <a href="/">Back</a>
                    </div>-->
                    <!--<div class="btn">-->
                        <button class="btn" id="focusModeBtn" onclick="focusMode()">Focus Mode</button>
                    <!--</div>-->
                    <!--<div class="btn">
                        <button id="showBtn" onclick="showOriginalText()">Show Original Text</button>
                        <div id = "originalText" style="display:none;">
                            <p><%= text %></p>
                        </div>
                    </div>-->
                </div>

                <form>

                    <!-- Make tooltips to explain fixation and saccade to the user. This could help => https://www.w3schools.com/css/css_tooltip.asp -->

                    <!-- (Note: An integer value between 1 and 5. A lower fixation means more letters in a word are highlighted.) -->
                    <!--<label for="fixation">Fixation: <span id="fixationValue"></span></label>
                    <input type="range" id="fixation" name="fixation" min="1" max="5" value=<%= fixation %>><br>-->

                    <!-- (Note: An integer value between 10 and 50 in steps of ten. A lower saccade means more words are highlighted.) -->
                    <label for="saccade">Saccade: <span id="saccadeValue"></span></label>
                    <input type="range" id="saccade" name="saccade" min="10" max="50" step="10" value="10"><br>

                    <label for="font">Font:</label>
                    <select id="font" name="font">
                        <option value="Arial" selected>Arial</option>
                        <option value="Verdana">Verdana</option>
                        <option value="Helvetica">Helvetica</option>
                        <option value="Tahoma">Tahoma</option>
                        <option value="Trebuchet MS">Trebuchet MS</option>
                        <option value="Times New Roman">Times New Roman</option>
                        <option value="Georgia">Georgia</option>
                        <option value="Garamond">Garamond</option>
                        <option value="Courier New">Courier New</option>
                        <option value="Brush Script MT">Brush Script MT</option>
                    </select><br>

                    <label for="fontSize">Font Size: <span id="fontSizeValue"></span></label>
                    <input type="range" id="fontSize" name="fontSize" min="10" max="50" step="1" value="16"><br>

                    <!-- <label for="textColour">Text Colour:</label>
                    <select id="textColour" name="textColour">
                        <option value="black" selected>Black</option>
                        <option value="white">White</option>
                        <option value="red">Red</option>
                        <option value="green">Green</option>
                        <option value="blue">Blue</option>
                    </select><br>

                    <label for="backgroundColour">Background Colour:</label>
                    <select id="backgroundColour" name="backgroundColour">
                        <option value="black">Black</option>
                        <option value="white" selected>White</option>
                        <option value="red">Red</option>
                        <option value="green">Green</option>
                        <option value="blue">Blue</option>
                    </select><br>

                    -->

                    <label for="colourScheme">Colour Scheme:</label>
                    <select id="colourScheme" name="colourScheme">
                        <option value="standard" selected>Standard</option>
                        <option value="sepia">Sepia</option>
                        <option value="rose">Rose</option>
                        <option value="mint">Mint</option>
                        <option value="dark">Dark</option>
                    </select><br>

                    <label for="letterSpacing">Letter Spacing: <span id="letterSpacingValue"></span></label>
                    <input type="range" id="letterSpacing" name="letterSpacing" min="-1" max="2" step="0.2" value="0"><br>

                    <label for="wordSpacing">Word Spacing: <span id="wordSpacingValue"></span></label>
                    <input type="range" id="wordSpacing" name="wordSpacing" min="-5" max="10" step="0.5" value="0"><br>

                    <label for="lineSpacing">Line Spacing: <span id="lineSpacingValue"></span></label>
                    <input type="range" id="lineSpacing" name="lineSpacing" min="1" max="3" step="0.2" value="1"><br>

                    <label for="fontWeight">Font Weight: <span id="fontWeightValue"></span></label>
                    <input type="range" id="fontWeight" name="fontWeight" min="100" max="900" step="100" value="600"><br>
                </form>
                
                <form action = "/download" method="POST">

                    <!-- <p><%= textWithBionic %></p> -->
                    <textarea id="bionicText" name="bionicText"><%= textWithBionic %></textarea>

                    <label for="filename">Filename:</label>
                    <input type="text" id="filename" name="filename" value="converted_text"><br>

                    <label for="fileType">File Type:</label>
                    <select id="fileType" name="fileType">
                        <option value="txt" selected>.txt</option>
                        <option value="pdf">.pdf</option>
                        <option value="docx">.docx</option>
                        <option value="rtf">.rtf</option>
                        <option value="html">.html</option>
                    </select><br>

                    <div id="btnArea">
                        <div class="btn">
                            <input type="submit" name="submit" value="Downloads">
                        </div>
                    </div>
                </form>       
            </div>

            </div><!-- grid-container-customise -->
        </div><!-- row -->

        <p class="copyright-notice">By uploading a file or converting text you confirm that you have the necessary permission of the copyright holder. Converted text is for your own use and not for distribution.</p>


    </main><!-- container -->

    <%- include('partials/footer.html'); %>

    <script>
        // hide/show original text [just for debugging, can remove later]
        // hiding and showing with button click https://www.w3schools.com/howto/howto_js_toggle_hide_show.asp 
        // initially hiding div https://stackoverflow.com/questions/16083647/hide-text-within-html
        // changing button text on click https://stackoverflow.com/questions/10671174/changing-button-text-onclick
        function showOriginalText(){
            var originalText = document.getElementById("originalText");
            var showBtn = document.getElementById("showBtn");

            if (originalText.style.display === "none"){
                originalText.style.display = "block";
                showBtn.innerHTML = "Hide Original Text";
            }
            else{
                originalText.style.display = "none";
                showBtn.innerHTML = "Show Original Text";
            }
        }

        // a simple test implementation of focus mode
        // works by toggling a large box-shadow over all other elements
        function focusMode(){
            var textArea = document.getElementById("textArea");

            textArea.classList.toggle("focused");
        }

        // set initial slider current values (so if a change is made we don't have to update in the label too)
        // document.getElementById("fixationValue").innerHTML = document.getElementById('fixation').value;
        document.getElementById("saccadeValue").innerHTML = document.getElementById('saccade').value;
        document.getElementById("fontSizeValue").innerHTML = document.getElementById('fontSize').value;
        document.getElementById("letterSpacingValue").innerHTML = document.getElementById('letterSpacing').value;
        document.getElementById("wordSpacingValue").innerHTML = document.getElementById('wordSpacing').value;
        document.getElementById("lineSpacingValue").innerHTML = document.getElementById('lineSpacing').value;
        document.getElementById("fontWeightValue").innerHTML = document.getElementById('fontWeight').value;

        // change fixation
        // document.getElementById("fixation").addEventListener('input', changeFixation);

        // function changeFixation(){
        //     console.log("Changing fixation!");

        //     var input = document.getElementById('fixation').value;
        //     var output = document.getElementById("fixationValue");
        //     output.innerHTML = input;

        // }

        // change saccade
        document.getElementById("saccade").addEventListener('input', changeSaccade);

        function changeSaccade(){
            console.log("Changing saccade!");

            var input = document.getElementById('saccade').value;
            var output = document.getElementById("saccadeValue");
            output.innerHTML = input;

            var text = document.getElementById('bionicText')
            var boldTags = text.getElementsByTagName("b");
            
            for(var i = 0; i < boldTags.length; i++){
                if(i % (input/10) == 0)
                {
                    // keep bold
                    boldTags[i].style.fontWeight = 900;
                }
                else{
                    // set to not bold
                    boldTags[i].style.fontWeight = 100;
                }
            }    
        }        

        // change font
        document.getElementById("font").addEventListener('input', changeFont);

        function changeFont(){
            console.log("Changing font!");

            var input = document.getElementById('font').value;
            document.getElementById('bionicText').style.fontFamily = input;     
        }

        // change font size
        document.getElementById("fontSize").addEventListener('input', changeFontSize);

        function changeFontSize(){
            console.log("Changing font size!");
            
            var input = document.getElementById('fontSize').value;
            // https://www.w3schools.com/howto/howto_js_rangeslider.asp
            var output = document.getElementById("fontSizeValue");
            output.innerHTML = input;

            document.getElementById('bionicText').style.fontSize = input + "px";            
        }

        // change text colour
        // document.getElementById("textColour").addEventListener('input', changeTextColour);

        // function changeTextColour(){
        //     console.log("Changing text colour!");

        //     var input = document.getElementById('textColour').value;
        //     document.getElementById('bionicText').style.color = input;
        // }

        // change background colour
        // document.getElementById("backgroundColour").addEventListener('input', changeBackgroundColour);

        // function changeBackgroundColour(){
        //     console.log("Changing background colour!")

        //     var input = document.getElementById('backgroundColour').value;
        //     document.getElementById('bionicText').style.backgroundColor = input;
        // }

        // change colour scheme
        document.getElementById("colourScheme").addEventListener('input', changeColourScheme);

        function changeColourScheme(){
            var input = document.getElementById('colourScheme').value;

            var bioonicTextColour;
            var bionicTextBG;

            switch(input){
                case "standard" :
                bionicTextColour = '#000000';
                bionicTextBG = '#ffffff';
                break;

                case "sepia" :
                bionicTextColour = '#002a2a';
                bionicTextBG = '#f1eede';
                break;

                case "mint" :
                bionicTextColour = '#007a7c';
                bionicTextBG = '#d1ffff';
                break;

                case "rose" :
                bionicTextColour = '#2a5547';
                bionicTextBG = '#ffd5d5';
                break;

                case "dark" :
                bionicTextColour = '#e0ffff';
                bionicTextBG = '#131313';
                break;

                default:
                bionicTextColour = '#000000';
                bionicTextBG = '#ffffff';

            }

            document.getElementById('bionicText').style.color = bionicTextColour;
            document.getElementById('bionicText').style.backgroundColor = bionicTextBG;

        }

        // change letter spacing
        document.getElementById("letterSpacing").addEventListener('input', changeLetterSpacing);

        function changeLetterSpacing(){
            console.log("Changing letter spacing!")

            var input = document.getElementById('letterSpacing').value;
            var output = document.getElementById("letterSpacingValue");
            output.innerHTML = input;      

            document.getElementById('bionicText').style.letterSpacing = input + "px";
        }        

        // change word spacing
        document.getElementById("wordSpacing").addEventListener('input', changeWordSpacing);

        function changeWordSpacing(){
            console.log("Changing word spacing!")

            var input = document.getElementById('wordSpacing').value;
            var output = document.getElementById("wordSpacingValue");
            output.innerHTML = input;

            document.getElementById('bionicText').style.wordSpacing = input + "px";
        }

        // change line spacing
        document.getElementById("lineSpacing").addEventListener('input', changeLineSpacing);

        function changeLineSpacing(){
            console.log("Changing line spacing!")

            var input = document.getElementById('lineSpacing').value;
            var output = document.getElementById("lineSpacingValue");
            output.innerHTML = input;

            document.getElementById('bionicText').style.lineHeight = input;
        }

        // change font weight
        document.getElementById("fontWeight").addEventListener('input', changeFontWeight);

        function changeFontWeight(){
            console.log("Changing font weight!")

            var input = document.getElementById('fontWeight').value;
            var output = document.getElementById("fontWeightValue");
            output.innerHTML = input;

            // https://www.w3schools.com/jsref/met_element_getelementsbytagname.asp
            var text = document.getElementById('bionicText')
            var boldTags = text.getElementsByTagName("b");
            
            for(var i = 0; i < boldTags.length; i++){
                boldTags[i].style.fontWeight = input;
            }
        }        
    </script>

</body>

</html>